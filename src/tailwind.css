/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --font-textFont: "Space Grotesk", "Poppins", sans-serif;
    --color-bgColor: #F2F1F6;
    --color-componentsColor: #F8F8F3;
    --color-componentsColorClear: #FEFFFE;
    --color-textColor: #000;
    --color-navShadowColor: rgba(0, 0, 0, 0.05);
    --color-sideBarCover: rgba(0, 0, 0, 0.4);
    --color-sideTextColorActive: #4884CA;
    --color-borderColor: #E6E6E6;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-12 {
    inset: calc(var(--spacing) * 12);
  }
  .inset-\[4px\] {
    inset: 4px;
  }
  .inset-\[12px\] {
    inset: 12px;
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-\[0\.48rem\] {
    top: 0.48rem;
  }
  .top-\[6px\] {
    top: 6px;
  }
  .top-\[7px\] {
    top: 7px;
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-\[-0\.7rem\] {
    left: -0.7rem;
  }
  .left-\[-100dvw\] {
    left: -100dvw;
  }
  .left-\[1\.5px\] {
    left: 1.5px;
  }
  .left-\[2px\] {
    left: 2px;
  }
  .z-10 {
    z-index: 10;
  }
  .z-15 {
    z-index: 15;
  }
  .z-20 {
    z-index: 20;
  }
  .m-\[1rem\] {
    margin: 1rem;
  }
  .mx-\[1rem\] {
    margin-inline: 1rem;
  }
  .mt-auto {
    margin-top: auto;
  }
  .mb-\[0\.5rem\] {
    margin-bottom: 0.5rem;
  }
  .mb-\[1rem\] {
    margin-bottom: 1rem;
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-95 {
    height: calc(var(--spacing) * 95);
  }
  .h-\[1\.5rem\] {
    height: 1.5rem;
  }
  .h-\[2\.2rem\] {
    height: 2.2rem;
  }
  .h-\[4rem\] {
    height: 4rem;
  }
  .h-\[6rem\] {
    height: 6rem;
  }
  .h-\[13rem\] {
    height: 13rem;
  }
  .h-\[100\%\] {
    height: 100%;
  }
  .h-auto {
    height: auto;
  }
  .h-dvh {
    height: 100dvh;
  }
  .h-full {
    height: 100%;
  }
  .w-90 {
    width: calc(var(--spacing) * 90);
  }
  .w-\[1\.25rem\] {
    width: 1.25rem;
  }
  .w-\[2\.2rem\] {
    width: 2.2rem;
  }
  .w-\[2rem\] {
    width: 2rem;
  }
  .w-\[6rem\] {
    width: 6rem;
  }
  .w-\[22rem\] {
    width: 22rem;
  }
  .w-\[70\%\] {
    width: 70%;
  }
  .w-\[100\%\] {
    width: 100%;
  }
  .w-\[calc\(100\%-2rem\)\] {
    width: calc(100% - 2rem);
  }
  .w-\[calc\(100\%-3rem\)\] {
    width: calc(100% - 3rem);
  }
  .w-dvh {
    width: 100dvh;
  }
  .w-dvw {
    width: 100dvw;
  }
  .w-full {
    width: 100%;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-row {
    flex-direction: row;
  }
  .place-items-center {
    place-items: center;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .gap-\[0\.5rem\] {
    gap: 0.5rem;
  }
  .gap-\[0\.15rem\] {
    gap: 0.15rem;
  }
  .gap-\[0\.25rem\] {
    gap: 0.25rem;
  }
  .gap-\[1\.25rem\] {
    gap: 1.25rem;
  }
  .gap-\[1rem\] {
    gap: 1rem;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-hidden {
    overflow-x: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-r-2xl {
    border-top-right-radius: var(--radius-2xl);
    border-bottom-right-radius: var(--radius-2xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-none {
    --tw-border-style: none;
    border-style: none;
  }
  .border-borderColor {
    border-color: var(--color-borderColor);
  }
  .bg-\[\#5E5452\] {
    background-color: #5E5452;
  }
  .bg-\[\#123456\] {
    background-color: #123456;
  }
  .bg-\[\#E8E8E0\] {
    background-color: #E8E8E0;
  }
  .bg-bgColor {
    background-color: var(--color-bgColor);
  }
  .bg-componentsColor {
    background-color: var(--color-componentsColor);
  }
  .bg-componentsColorClear {
    background-color: var(--color-componentsColorClear);
  }
  .bg-sideBarCover {
    background-color: var(--color-sideBarCover);
  }
  .stroke-textColor {
    stroke: var(--color-textColor);
  }
  .p-\[0\.75rem\] {
    padding: 0.75rem;
  }
  .p-\[1\.2rem\] {
    padding: 1.2rem;
  }
  .p-\[1\.25rem\] {
    padding: 1.25rem;
  }
  .p-\[1rem\] {
    padding: 1rem;
  }
  .px-\[1\.25rem\] {
    padding-inline: 1.25rem;
  }
  .px-\[1rem\] {
    padding-inline: 1rem;
  }
  .pt-\[0px\] {
    padding-top: 0px;
  }
  .pr-0 {
    padding-right: calc(var(--spacing) * 0);
  }
  .pb-\[1\.25rem\] {
    padding-bottom: 1.25rem;
  }
  .text-center {
    text-align: center;
  }
  .font-textFont {
    font-family: var(--font-textFont);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-\[0\.7rem\] {
    font-size: 0.7rem;
  }
  .text-\[1\.7rem\] {
    font-size: 1.7rem;
  }
  .text-\[1\.35rem\] {
    font-size: 1.35rem;
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .text-nowrap {
    text-wrap: nowrap;
  }
  .text-ellipsis {
    text-overflow: ellipsis;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-componentsColor {
    color: var(--color-componentsColor);
  }
  .text-textColor {
    color: var(--color-textColor);
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-60 {
    opacity: 60%;
  }
  .opacity-100 {
    opacity: 100%;
  }
  .shadow-\[var\(--color-navShadowColor\)_0px_2px_8px\] {
    --tw-shadow: var(--tw-shadow-color, var(--color-navShadowColor)) 0px 2px 8px;
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .in-\[\.bg-componentsColorClear\]\:stroke-sideTextColorActive {
    :where(*:is(.bg-componentsColorClear)) & {
      stroke: var(--color-sideTextColorActive);
    }
  }
  .in-\[\.bg-componentsColorClear\]\:text-sideTextColorActive {
    :where(*:is(.bg-componentsColorClear)) & {
      color: var(--color-sideTextColorActive);
    }
  }
  .lg\:w-\[26rem\] {
    @media (width >= 64rem) {
      width: 26rem;
    }
  }
  .\[\&\>li\>a\]\:flex {
    &>li>a {
      display: flex;
    }
  }
  .\[\&\>li\>a\]\:flex-row {
    &>li>a {
      flex-direction: row;
    }
  }
  .\[\&\>li\>a\]\:items-center {
    &>li>a {
      align-items: center;
    }
  }
  .\[\&\>li\>a\]\:gap-\[0\.65rem\] {
    &>li>a {
      gap: 0.65rem;
    }
  }
  .\[\&\>li\>a\]\:px-\[1\.25rem\] {
    &>li>a {
      padding-inline: 1.25rem;
    }
  }
  .\[\&\>li\>a\]\:py-\[0\.75rem\] {
    &>li>a {
      padding-block: 0.75rem;
    }
  }
  .\[\&\>small\]\:text-xs {
    &>small {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }
  .\[\&\>span\]\:flex {
    &>span {
      display: flex;
    }
  }
  .\[\&\>span\]\:flex-row {
    &>span {
      flex-direction: row;
    }
  }
  .\[\&\>span\]\:gap-\[1rem\] {
    &>span {
      gap: 1rem;
    }
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}